name: Build Pico2W Firmware

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake python3 wget xz-utils git ninja-build

      - name: Install ARM GCC Toolchain
        run: |
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi.tar.xz
          echo "PICO_TOOLCHAIN_PATH=$(pwd)/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi" >> $GITHUB_ENV
          echo "$(pwd)/arm-gnu-toolchain-13.2.Rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_PATH
          ls -l $(pwd)
          ls -l $(pwd)/arm-gnu-toolchain*

      - name: Verify Toolchain Installation
        run: |
          which arm-none-eabi-gcc
          arm-none-eabi-gcc --version

      - name: Build mpy-cross
        run: |
          cd micropython/mpy-cross
          make -j$(nproc)

      - name: Build firmware for Pico W
        env:
          PICO_TOOLCHAIN_PATH: ${{ env.PICO_TOOLCHAIN_PATH }}
        run: |
          cd micropython/ports/rp2
          git submodule update --init --recursive
          cmake -DPICO_BOARD=pico_w -G Ninja .
          ninja

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: micropython-pico2w
          path: micropython/ports/rp2/build-PICO_W/firmware.uf2

